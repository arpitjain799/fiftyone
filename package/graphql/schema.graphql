union AggregationResponse = CountResponse | BoolCountValuesResponse | IntCountValuesResponse | StrCountValuesResponse | BoolDistinctResponse | IntDistinctResponse | StrDistinctResponse | DatetimeHistogramValuesResponse | FloatHistogramValuesResponse | IntHistogramValuesResponse

input Aggregations {
  count: Count = null
  countValues: CountValues = null
  distinct: Distinct = null
  histogramValues: HistogramValues = null
}

type BoolCountValuesResponse {
  values: [BoolValueCount!]!
}

type BoolDistinctResponse {
  values: [Boolean!]!
}

type BoolValueCount {
  key: Boolean
  value: Int!
}

input Count {
  field: String = null
}

type CountResponse {
  count: Int!
}

input CountValues {
  field: String!
}

type Dataset {
  aggregate(aggregations: [Aggregations!]!, view: [JSON!] = null): [AggregationResponse!]!
}

type DatetimeHistogramValuesResponse {
  counts: [Int!]!
  edges: [datetime!]!
  other: Int!
}

input Distinct {
  field: String!
}

type FloatHistogramValuesResponse {
  counts: [Int!]!
  edges: [Float!]!
  other: Int!
}

input HistogramValues {
  field: String!
}

type IntCountValuesResponse {
  values: [IntValueCount!]!
}

type IntDistinctResponse {
  values: [Int!]!
}

type IntHistogramValuesResponse {
  counts: [Int!]!
  edges: [Float!]!
  other: Int!
}

type IntValueCount {
  key: Int
  value: Int!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Query {
  dataset(name: String!): Dataset!
}

type StrCountValuesResponse {
  values: [StrValueCount!]!
}

type StrDistinctResponse {
  values: [String!]!
}

type StrValueCount {
  key: String
  value: Int!
}

scalar datetime
